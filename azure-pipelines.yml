parameters:
  - name: BuildPool
    type: string
    default: 'ubuntu-latest'
  - name: AzureArmServiceConnection
    type: string
    default: test0407-2
  - name: TerraformDirectory
    type: string
    default: $(Build.SourcesDirectory)/dev
  - name: DeploymentEnvironment
    type: string
    default: TfEnv

variables:
  - name: System.Debug
    value: true

stages:
  - stage: Build_TFPlan
    jobs:
      - job: Build_TFPlan
        pool: 
          vmImage: ${{ parameters.BuildPool }}
        steps:
          - template: /terraform-init.yml
            parameters:
              AzureArmServiceConnection: ${{ parameters.AzureArmServiceConnection }}
              TerraformDirectory: ${{ parameters. TerraformDirectory }}

          - task: AzureCLI@2
            name: Terraform_Plan
            env:
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_OIDC_TOKEN: $(ARM_OIDC_TOKEN)
              ARM_TENANT_ID: $(ARM_TENANT_ID)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
            inputs:
              addSpnToEnvironment: true
              azureSubscription: ${{ parameters.AzureArmServiceConnection }}
              scriptType: pscore
              scriptLocation: inlineScript
              workingDirectory: ${{ parameters.TerraformDirectory }}
              inlineScript: |
                $Directory = '$(Build.ArtifactStagingDirectory)/tfplan'
                New-Item -ItemType Directory -Path $Directory -Force
                $File = Join-Path -Path $Directory -ChildPath terraform.plan
                & terraform plan --out=$File
                Write-Host "##vso[task.setvariable variable=TERRAFORM_PLAN_PATH]$File"
                
          - task:  PublishPipelineArtifact@1
            name: Publish_TfPlan
            inputs:
              artifact: TerraformPlan
              targetPath: $(TERRAFORM_PLAN_PATH)

  - stage: Deploy
    jobs:
      - deployment: Deploy
        environment: ${{ parameters.DeploymentEnvironment }}
        pool:
          vmImage: ${{ parameters.BuildPool}}
        strategy:
          runOnce:
            deploy:
              steps:
                - template: /terraform-init.yml
                  parameters:
                    AzureArmServiceConnection: ${{ parameters.AzureArmServiceConnection }}
                    TerraformDirectory: ${{ parameters.TerraformDirectory }}
                  
                - task: AzureCLI@2
                  name: Terraform_Apply
                  env:
                    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
                    ARM_OIDC_TOKEN: $(ARM_OIDC_TOKEN)
                    ARM_TENANT_ID: $(ARM_TENANT_ID)
                    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
                  inputs:
                    addSpnToEnvironment: true
                    azureSubscription: ${{ parameters. AzureArmServiceConnection }}
                    scriptType: pscore
                    scriptLocation: inlineScript
                    workingDirectory: ${{ parameters.TerraformDirectory }}
                    inlineScript: |
                      & terraform apply '$(Pipeline.Workspave)/TerraformPlan/terraform.plan'

        


                

              
